package com.momentum.impl.modules.exploit.pingspoof;

import com.momentum.api.event.FeatureListener;
import com.momentum.asm.mixins.vanilla.accessors.INetHandlerPlayClient;
import com.momentum.impl.events.vanilla.TickEvent;
import net.minecraft.network.Packet;

/**
 * @author linus
 * @since 03/10/2023
 */
@SuppressWarnings("rawtypes")
public class TickListener extends FeatureListener<PingSpoofModule, TickEvent> {

    /**
     * Default constructor
     *
     * @param feature The associated feature
     */
    protected TickListener(PingSpoofModule feature) {
        super(feature);
    }

    @Override
    public void invoke(TickEvent event) {

        // null check
        if (mc.player == null || mc.world == null || !((INetHandlerPlayClient) mc.player.connection).isDoneLoadingTerrain()) {
            return;
        }

        // check if delay has passed
        if (feature.delay.passed(feature.delayOption.getVal())) {

            // send our packets before disabling
            if (!feature.packets.isEmpty()) {

                // we can now begin processing packets
                for (Packet packet : feature.packets) {

                    // make sure packet exists
                    if (packet != null) {

                        // send all queued packets
                        mc.player.connection.sendPacket(packet);
                    }
                }

                // clear packets list
                feature.packets.clear();
            }

            // reset packet time
            feature.delay.reset();
        }
    }
}
